{"version":3,"file":"static/js/575.06ac7e17.chunk.js","mappings":"iLACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAuP,4B,6BCSvP,MAcA,EAdoCA,IAE5BC,EAAAA,EAAAA,KAAA,OAAAC,UACAD,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAeF,SAC1BF,EAAMK,QAAQC,KAAIC,IACfC,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAASF,SAAA,EACrBD,EAAAA,EAAAA,KAAA,OAAKQ,IAAKF,EAAEG,QAAUA,EAAAA,EAAQC,IAAI,MAClCV,EAAAA,EAAAA,KAACW,EAAAA,GAAO,CAACC,GAAI,YAAcN,EAAEO,GACpBX,UAAWY,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAWZ,EAAWA,CAAQ,EAACF,SAAEK,EAAEU,SAH5CV,EAAEO,U,aCJ1C,MAAMI,EAAkClB,IAAW,IAADmB,EACrD,MAAM,SACFC,EACAC,WAAW,OAACC,EAAM,QAAEC,GAAQ,aAC5BC,EAAY,MACZC,IACAC,EAAAA,EAAAA,IAA4B,CAC5BC,KAAM,WAQV,OACInB,EAAAA,EAAAA,MAAA,QAAMoB,SAAUJ,GANFK,IACd7B,EAAM8B,WAAWD,EAAKE,YACtBN,GAAO,IAIgCvB,SAAA,EACnCD,EAAAA,EAAAA,KAAA,YAAU+B,YAAY,mBACdZ,EAAS,aAAc,CACvBa,UAAW,SAEnBhC,EAAAA,EAAAA,KAAA,OAAAC,UACW,OAANoB,QAAM,IAANA,OAAM,EAANA,EAAQS,cAAc9B,EAAAA,EAAAA,KAAA,KAAAC,UAAU,OAANoB,QAAM,IAANA,GAAkB,QAAZH,EAANG,EAAQS,kBAAU,IAAAZ,OAAZ,EAANA,EAAoBe,UAAW,cAE9DjC,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASC,UAAWb,EAAQrB,SAAC,WACvC,ECZf,EAdiCF,IAEtBQ,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAWF,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAUF,SACrBF,EAAMqC,SAAS/B,KAAIgC,IAChBrC,EAAAA,EAAAA,KAAA,OAAAC,SAAiBoC,EAAEJ,SAATI,EAAExB,SAGpBb,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAaF,UACzBD,EAAAA,EAAAA,KAACiB,EAAc,CAACY,WAAY9B,EAAM8B,kBCiB9C,SAAeS,EAAAA,EAAAA,KAPQC,IACZ,CACHnC,QAASmC,EAAMC,YAAYpC,QAC3BgC,SAAUG,EAAMC,YAAYJ,YAII,CAACP,WAAaY,EAAAA,EAAQZ,YAA9D,EAjByC9B,IAEjCQ,EAAAA,EAAAA,MAAA,OAAKL,UAAWwC,EAAqBzC,SAAA,EACjCD,EAAAA,EAAAA,KAAC2C,EAAU,CAACvC,QAASL,EAAMK,WAC3BJ,EAAAA,EAAAA,KAAC4C,EAAO,CAACR,SAAUrC,EAAMqC,SAChBP,WAAY9B,EAAM8B,iB","sources":["webpack://ReactSocialNetwork/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Message/AddMessageForm.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ThEfZ\",\"dialogsItems\":\"Dialogs_dialogsItems__YLEE7\",\"dialog\":\"Dialogs_dialog__gZ2oy\",\"active\":\"Dialogs_active__roUlT\",\"messages\":\"Dialogs_messages__zYslj\",\"message\":\"Dialogs_message__44r0l\",\"addMessage\":\"Dialogs_addMessage__eb9SC\"};","import React, {FC} from 'react';\r\nimport avatar from '../../../assets/images/avatar.svg'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../../../redux/dialogsReducer\";\r\n\r\ntype PropsTypes = {\r\n    dialogs: DialogType[]\r\n}\r\n\r\nconst DialogItem: FC<PropsTypes> = (props) => {\r\n    return (\r\n        <div>\r\n        <div className={s.dialogsItems}>\r\n            {props.dialogs.map(d =>\r\n                <div className={s.dialog} key={d.id}>\r\n                    <img src={d.avatar || avatar} alt=\"\"/>\r\n                    <NavLink to={\"/dialogs/\" + d.id}\r\n                             className={({isActive}) => isActive ? s.active : s.dialog}>{d.name}</NavLink>\r\n                </div>)}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React, {FC} from 'react';\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\n\r\ntype PropsTypes = {\r\n    addMessage: (newMessage: string) => void\r\n}\r\n\r\ntype NewMessageFormType = {\r\n    newMessage: string\r\n}\r\n\r\nexport const AddMessageForm: FC<PropsTypes> = (props) => {\r\n    const {\r\n        register,\r\n        formState: {errors, isValid},\r\n        handleSubmit,\r\n        reset\r\n    } = useForm<NewMessageFormType>({\r\n        mode: \"onBlur\"\r\n    });\r\n\r\n    const onSubmit = (data: NewMessageFormType) => {\r\n        props.addMessage(data.newMessage)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <textarea placeholder=\"Add your text\"\r\n                {...register(\"newMessage\", {\r\n                    maxLength: 300\r\n                })}/>\r\n            <div>\r\n                {errors?.newMessage && <p>{errors?.newMessage?.message || \"Error!\"}</p>}\r\n            </div>\r\n            <button type=\"submit\" disabled={!isValid}>Send</button>\r\n        </form>\r\n    )\r\n}","import React, {FC} from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {AddMessageForm} from \"./AddMessageForm\";\r\nimport {MessageType} from \"../../../redux/dialogsReducer\";\r\n\r\ntype PropsTypes = {\r\n    messages: MessageType[]\r\n    addMessage: (newMessage: string) => void\r\n}\r\n\r\nconst Message: FC<PropsTypes> = (props) => {\r\n\r\n    return <div className={s.messages}>\r\n        <div className={s.message}>\r\n            {props.messages.map(m =>\r\n                <div key={m.id}>{m.message}</div>\r\n            )}\r\n        </div>\r\n        <div className={s.addMessage}>\r\n            <AddMessageForm addMessage={props.addMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Message;","import {actions, DialogType, MessageType} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {FC} from \"react\";\r\nimport dialogsStyle from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessage: string) => void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst dialogsContainer: FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={dialogsStyle.dialogs}>\r\n            <DialogItem dialogs={props.dialogs}/>\r\n            <Message messages={props.messages}\r\n                     addMessage={props.addMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addMessage : actions.addMessage})(dialogsContainer);\r\n"],"names":["props","_jsx","children","className","s","dialogs","map","d","_jsxs","src","avatar","alt","NavLink","to","id","_ref","isActive","name","AddMessageForm","_errors$newMessage","register","formState","errors","isValid","handleSubmit","reset","useForm","mode","onSubmit","data","addMessage","newMessage","placeholder","maxLength","message","type","disabled","messages","m","connect","state","dialogsPage","actions","dialogsStyle","DialogItem","Message"],"sourceRoot":""}