{"version":3,"file":"static/js/976.f69485c2.chunk.js","mappings":"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","sources":["webpack://ReactSocialNetwork/./src/components/Users/Users.module.css?b9d0","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Users_pagination__yKKZf\",\"infoPage\":\"Users_infoPage__lbckN\",\"userItem\":\"Users_userItem__wX4gC\",\"userPhoto\":\"Users_userPhoto__0hFuF\",\"follow\":\"Users_follow__g0azf\",\"followed\":\"Users_followed__iwrLF\",\"followed_unfollow\":\"Users_followed_unfollow__cDCHo\",\"info\":\"Users_info__3XOHj\",\"stateFollow\":\"Users_stateFollow__D6VE2\",\"stateUnfollow\":\"Users_stateUnfollow__GXIbH\",\"description\":\"Users_description__mkOV+\",\"showMore\":\"Users_showMore__BhhDM\",\"numberPage\":\"Users_numberPage__qtAfg\"};","import React, {FC, useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {followed, requestUsers} from \"../../redux/usersReducer\";\r\nimport s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/avatar.svg\";\r\nimport {UsersType} from \"../../redux/types/types\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\n\r\ntype MapStateToPropsType = {\r\n    loading: boolean\r\n    users: UsersType[]\r\n    followingId: number | null\r\n    totalCount: number\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    followed: (userId: number) => void\r\n    requestUsers(page: number): void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst UsersContainer: FC<PropsType> = (props: PropsType) => {\r\n\r\n    const [count, setCount] = useState<number>(5)\r\n    const [page, setPage] = useState<number>(1)\r\n    const totalPage = Math.ceil(props.totalCount / 100)\r\n\r\n    const getPage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const n = Number(e.target.value)\r\n        setPage(n)\r\n    }\r\n\r\n    useEffect(() => {\r\n      props.requestUsers(page)\r\n    }, [page]);\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.infoPage}>\r\n                <span>Total users: {props.totalCount}</span>\r\n                <span>Total pages: {totalPage}</span>\r\n                <span>Total users per page: 100</span>\r\n            </div>\r\n            <div className={s.pagination}>\r\n                 <button\r\n                    onClick={() => setPage(page - 1)} className={s.showMore} disabled={page === 1}>\r\n                    PrevPage\r\n                </button>\r\n                <label>\r\n                    Page:\r\n                    <input className={s.numberPage} value={page} onChange={getPage}/>\r\n                </label>\r\n                <button\r\n                    onClick={() => {setPage(page + 1); setCount(5)}} className={s.showMore} disabled={props.loading}>\r\n                    NextPage\r\n                </button>\r\n            </div>\r\n            {props.users.slice(0, count).map((u, i) =>\r\n                <div className={s.userItem} key={i}>\r\n                    <span className={s.follow}>\r\n                             <NavLink to={'/' + u.id}>\r\n                                <img src={u.photos.small ? u.photos.small : avatar}\r\n                                     alt=''\r\n                                     className={s.userPhoto}/>\r\n                             </NavLink>\r\n                                <button className={`${s.followed} ${u.followed && s.followed_unfollow}`}\r\n                                        disabled={props.followingId === u.id}\r\n                                        onClick={() => props.followed(u.id)}>\r\n                                         {u.followed ? \"Unfollow\" : \"Follow\"}\r\n                                 </button>\r\n                     </span>\r\n                    <div className={s.info}>\r\n                        <div>\r\n                            <span>Name: </span>{u.name}\r\n                        </div>\r\n                        <div>\r\n                            <span>Followed:</span>\r\n                            <div className={`${s.stateFollow} ${!u.followed && s.stateUnfollow}`}></div>\r\n                        </div>\r\n                        <span>User id: </span>{u.id}\r\n                    </div>\r\n                    {u.status !== null && <div className={s.description}>\r\n                        <span>Status: </span>{u.status}</div>}\r\n                </div>\r\n            )}\r\n            <div >\r\n                {count < 100 && <button\r\n                    onClick={() => setCount(count + 5)} className={s.showMore} disabled={props.loading}>\r\n                    {props.loading ? \"Loading...\" : \"Load More\"}\r\n                </button>}\r\n                {count === 100 &&\r\n                    <div className={s.pagination}>\r\n                        <button\r\n                            onClick={() => {setPage(page - 1);setCount(5)}}\r\n                            className={s.showMore} disabled={page === 1}>\r\n                            PrevPage\r\n                        </button>\r\n                        <input className={s.showMore} value={page} onChange={getPage}/>\r\n                        <button\r\n                            onClick={() => {setPage(page + 1); setCount(5)}}\r\n                            className={s.showMore} disabled={props.loading}>\r\n                            NextPage\r\n                        </button>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        loading: state.usersPage.loading,\r\n        users: state.usersPage.users,\r\n        followingId: state.usersPage.followingId,\r\n        totalCount: state.usersPage.totalCount,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {followed, requestUsers})(UsersContainer) as React.ComponentType"],"names":["connect","state","loading","usersPage","users","followingId","totalCount","followed","requestUsers","props","count","setCount","useState","page","setPage","totalPage","Math","ceil","getPage","e","n","Number","target","value","useEffect","_jsxs","className","s","children","infoPage","_jsx","pagination","onClick","showMore","disabled","numberPage","onChange","slice","map","u","i","userItem","follow","NavLink","to","id","src","photos","small","avatar","alt","userPhoto","concat","followed_unfollow","info","name","stateFollow","stateUnfollow","status","description"],"sourceRoot":""}