{"version":3,"file":"static/js/170.88335c78.chunk.js","mappings":"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","sources":["webpack://ReactSocialNetwork/./src/components/Users/users.module.css?9211","components/Users/UsersSearchForm.tsx","components/Users/UsersPagination/UpperBlockPagination.tsx","components/Users/UsersPagination/LowerBlockPagination.tsx","redux/selectors/users_selectors.ts","components/Users/UserCard.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"users_pagination__Npw4H\",\"infoPage\":\"users_infoPage__NPDb7\",\"pageInput\":\"users_pageInput__lsrhg\",\"numberPage\":\"users_numberPage__t8Pin\",\"usersSearch\":\"users_usersSearch__6+QpO\",\"userItem\":\"users_userItem__4HrV7\",\"userPhoto\":\"users_userPhoto__Nyd6G\",\"follow\":\"users_follow__3zutk\",\"followed\":\"users_followed__cPPnS\",\"followed_unfollow\":\"users_followed_unfollow__wHdb9\",\"info\":\"users_info__9ncw0\",\"stateFollow\":\"users_stateFollow__lEePx\",\"stateUnfollow\":\"users_stateUnfollow__9fIUW\",\"description\":\"users_description__U3-mM\",\"showMore\":\"users_showMore__xGKj5\"};","import React, {FC} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"./users.module.css\";\r\nimport {FilterType} from \"../../redux/usersReducer\";\r\n\r\ntype PropsTypes = {\r\n    setPage: (page: number) => void\r\n    requestUsers: (page: number, filter: FilterType) => void\r\n    page: number\r\n}\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: \"true\" | \"false\" | \"null\"\r\n}\r\n\r\nexport const UsersSearchForm: FC<PropsTypes> = ({setPage, requestUsers, page}) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm<FormType>({\r\n        mode: \"onChange\",\r\n        defaultValues: {term: '', friend: 'null'}\r\n    });\r\n\r\n    const onFilterChange = (filter: FilterType) => {\r\n        setPage(1)\r\n        requestUsers(page, filter)\r\n    }\r\n\r\n    const onChange = (values: FormType) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n        }\r\n        onFilterChange(filter)\r\n    }\r\n\r\n    return (\r\n        <div className={s.usersSearch}>\r\n            <form onChange={handleSubmit(onChange)}>\r\n                <input autoComplete='off' {...register(\"term\", {})}/>\r\n                <select {...register(\"friend\", {})}>\r\n                    <option value=\"null\">All</option>\r\n                    <option value=\"true\">Only follow</option>\r\n                    <option value=\"false\">Only unfollow</option>\r\n                </select>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import s from \"../users.module.css\";\r\nimport React, {FC} from \"react\";\r\nimport {UsersType} from \"../../../redux/types/types\";\r\n\r\ntype PropsTypes = {\r\n    loading: boolean\r\n    users: UsersType[]\r\n    page: number\r\n    totalPage: number\r\n    setPage: (page: number) => void\r\n    setCount: (count: number) => void\r\n}\r\n\r\nexport const UpperBlockPagination: FC<PropsTypes> = ({setPage, page, setCount, users, loading, totalPage}) => {\r\n\r\n    const getPage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let n = Number(e.target.value)\r\n        setPage(n)\r\n        if (n < 1 || n > totalPage) {\r\n            setPage(page)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.pageInput}>\r\n                Input page number:\r\n                <input className={s.numberPage} type=\"number\" min={1} max={totalPage} onChange={getPage}/>\r\n            </div>\r\n            <div className={s.pagination}>\r\n                <button\r\n                    onClick={() => {\r\n                        setPage(page - 1);\r\n                        setCount(4)\r\n                    }}\r\n                    className={s.showMore} disabled={page === 1}>\r\n                    PrevPage\r\n                </button>\r\n                <div className={s.numberPage}>Current page: {page}</div>\r\n                <button\r\n                    onClick={() => {\r\n                        setPage(page + 1);\r\n                        setCount(4)\r\n                    }}\r\n                    className={s.showMore} disabled={loading || users.length < 100}>\r\n                    NextPage\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import s from \"../users.module.css\";\r\nimport React, {FC} from \"react\";\r\nimport {UsersType} from \"../../../redux/types/types\";\r\n\r\ntype PropsTypes = {\r\n    loading: boolean\r\n    users: UsersType[]\r\n    currentPage: number\r\n    setCurrentPage: (page: number) => void\r\n    setCount: (count: number) => void\r\n    count: number\r\n    totalPage: number\r\n}\r\n\r\nexport const LowerBlockPagination: FC<PropsTypes> = ({setCurrentPage, currentPage, setCount,\r\n                                                         users, loading, count, totalPage}) => {\r\n\r\n    return (\r\n        <div >\r\n            {count < users.length\r\n                ? <button onClick={() => setCount(count + 10)} className={s.showMore} disabled={loading}>\r\n                    {loading ? \"Loading...\" : \"Load More\"}\r\n                </button>\r\n                : ( (currentPage < totalPage || count === 100)\r\n                    && <button onClick={() => {setCurrentPage(currentPage + 1);setCount(4)}}\r\n                        className={s.showMore}>\r\n                        NextPage\r\n                        </button>)}\r\n        </div>\r\n    )\r\n}","import {AppStateType} from \"../redux_store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getTotalCount = (state: AppStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\nexport const getFollowingId = (state: AppStateType) => {\r\n    return state.usersPage.followingId\r\n}\r\nexport const getPage = (state: AppStateType) => {\r\n    return state.usersPage.page\r\n}\r\nexport const getLoading = (state: AppStateType) => {\r\n    return state.usersPage.loading\r\n}\r\nexport const getFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/avatar.svg\";\r\nimport React, {FC} from \"react\";\r\nimport {UsersType} from \"../../redux/types/types\";\r\nimport {AppDispatch} from \"../../redux/redux_store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {followed} from \"../../redux/usersReducer\";\r\nimport {getFollowingId} from \"../../redux/selectors/users_selectors\";\r\n\r\ntype PropsTypes = {\r\n    users: UsersType[]\r\n    count: number\r\n}\r\n\r\nexport const UserCard: FC<PropsTypes> = ({users, count}) => {\r\n\r\n    const followingId = useSelector(getFollowingId)\r\n\r\n    const dispatch: AppDispatch = useDispatch()\r\n\r\n    return (\r\n        <>\r\n            {users.slice(0, count).map((u, i) =>\r\n                <div className={s.userItem} key={i}>\r\n                    <span className={s.follow}>\r\n                             <NavLink to={'/' + u.id}>\r\n                                <img src={u.photos.small ? u.photos.small : avatar}\r\n                                     alt=''\r\n                                     className={s.userPhoto}/>\r\n                             </NavLink>\r\n                                <button className={`${s.followed} ${u.followed && s.followed_unfollow}`}\r\n                                        disabled={followingId === u.id}\r\n                                        onClick={() => dispatch(followed(u.id))}>\r\n                                         {u.followed ? \"Unfollow\" : \"Follow\"}\r\n                                 </button>\r\n                     </span>\r\n                    <div className={s.info}>\r\n                        <div>\r\n                            <span>Name: </span>{u.name}\r\n                        </div>\r\n                        <div>\r\n                            <span>Followed:</span>\r\n                            <div className={`${s.stateFollow} ${!u.followed && s.stateUnfollow}`}></div>\r\n                        </div>\r\n                        <span>User id: </span>{u.id}\r\n                    </div>\r\n                    {u.status !== null && <div className={s.description}>\r\n                        <span>Status: </span>{u.status}</div>}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FilterType, followed, requestUsers} from \"../../redux/usersReducer\";\r\nimport s from \"./users.module.css\";\r\nimport {AppDispatch} from \"../../redux/redux_store\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {UpperBlockPagination} from \"./UsersPagination/UpperBlockPagination\";\r\nimport {LowerBlockPagination} from \"./UsersPagination/LowerBlockPagination\";\r\nimport {UserCard} from \"./UserCard\";\r\nimport {\r\n    getFilter,\r\n    getFollowingId,\r\n    getLoading,\r\n    getPage,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../redux/selectors/users_selectors\";\r\n// import {useLocation, useNavigate} from \"react-router\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\nexport const UsersContainer = React.memo(() => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalCount = useSelector(getTotalCount)\r\n    const followingId = useSelector(getFollowingId)\r\n    const page = useSelector(getPage)\r\n    const loading = useSelector(getLoading)\r\n    const filter = useSelector(getFilter)\r\n\r\n    const dispatch: AppDispatch = useDispatch()\r\n\r\n    const reqUsers = (currentPage: number, filter: FilterType) => {\r\n        dispatch(requestUsers(currentPage, filter))\r\n    }\r\n\r\n    const [count, setCount] = useState<number>(4)\r\n    const [currentPage, setCurrentPage] = useState<number>(page)\r\n    const totalPage = Math.ceil(totalCount / 100)\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    useEffect(() => {\r\n        reqUsers(currentPage, filter)\r\n    }, [currentPage]);\r\n\r\n    useEffect(() => {\r\n        const term = filter.term\r\n        const friend = filter.friend\r\n\r\n        let urlQuery =\r\n            (term === ''? '' : `&term=${term}`)\r\n        + (friend === null ? '' : `&friend=${friend}`)\r\n        + (currentPage === 1 ? '' : `&page=${currentPage}`)\r\n\r\n        setSearchParams(urlQuery)\r\n\r\n    }, [filter,currentPage]);\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.infoPage}>\r\n                <span>Users per page: 100</span>\r\n                <span>Total pages: {totalPage}</span>\r\n                <span>Total users: {totalCount}</span>\r\n            </div>\r\n            <UpperBlockPagination\r\n                totalPage={totalPage}\r\n                setPage={setCurrentPage}\r\n                page={currentPage}\r\n                setCount={setCount}\r\n                users={users}\r\n                loading={loading}/>\r\n            <UsersSearchForm\r\n                setPage={setCurrentPage}\r\n                requestUsers={reqUsers}\r\n                page={currentPage}/>\r\n            <UserCard\r\n                users={users}\r\n                count={count}/>\r\n            <LowerBlockPagination\r\n                setCurrentPage={setCurrentPage}\r\n                count={count}\r\n                totalPage={totalPage}\r\n                currentPage={currentPage}\r\n                setCount={setCount}\r\n                users={users}\r\n                loading={loading}/>\r\n        </div>\r\n    )\r\n})\r\n"],"names":["UsersSearchForm","_ref","setPage","requestUsers","page","register","handleSubmit","useForm","mode","defaultValues","term","friend","_jsx","className","s","usersSearch","children","_jsxs","onChange","values","filter","onFilterChange","autoComplete","value","UpperBlockPagination","setCount","users","loading","totalPage","_Fragment","pageInput","numberPage","type","min","max","e","n","Number","target","pagination","onClick","showMore","disabled","length","LowerBlockPagination","setCurrentPage","currentPage","count","getUsers","state","usersPage","getTotalCount","totalCount","getFollowingId","followingId","getPage","getLoading","getFilter","UserCard","useSelector","dispatch","useDispatch","slice","map","u","i","userItem","follow","NavLink","to","id","src","photos","small","avatar","alt","userPhoto","concat","followed","followed_unfollow","info","name","stateFollow","stateUnfollow","status","description","UsersContainer","React","reqUsers","useState","Math","ceil","searchParams","setSearchParams","useSearchParams","useEffect","urlQuery","infoPage"],"sourceRoot":""}