{"version":3,"file":"static/js/619.0eaf3ccf.chunk.js","mappings":"0KACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAuP,4B,sBCEhP,MAAMA,EAAkBC,IAAW,IAADC,EACrC,MAAM,SACFC,EACAC,WAAW,OAACC,EAAM,QAAEC,GAAQ,aAC5BC,EAAY,MACZC,IACAC,EAAAA,EAAAA,IAAQ,CACRC,KAAM,WAQV,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUL,GANFM,IACdZ,EAAMW,SAASC,GACfL,GAAO,IAIgCM,SAAA,EACnCC,EAAAA,EAAAA,KAAA,YAAUC,YAAY,mBACdb,EAAS,aAAc,CACvBc,SAAU,gBACVC,UAAW,CACPC,MAAO,EACPC,QAAS,iBAGbC,UAAW,SAEnBN,EAAAA,EAAAA,KAAA,OAAAD,UACW,OAANT,QAAM,IAANA,OAAM,EAANA,EAAQiB,YAAYP,EAAAA,EAAAA,KAAA,KAAAD,UAAU,OAANT,QAAM,IAANA,GAAgB,QAAVH,EAANG,EAAQiB,gBAAQ,IAAApB,OAAV,EAANA,EAAkBkB,UAAW,cAE1DL,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASC,UAAWlB,EAAQQ,SAAC,WACvC,ECTf,EApBiBb,IAMNU,EAAAA,EAAAA,MAAA,OAAKc,UAAWC,EAAsBZ,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKU,UAAWC,EAAqBZ,SAChCb,EAAMmB,QAAQO,KAAIC,IACfb,EAAAA,EAAAA,KAAA,OAAAD,SAAiBc,EAAER,SAATQ,EAAEC,SAGpBd,EAAAA,EAAAA,KAAA,OAAKU,UAAWC,EAAwBZ,UACpCC,EAAAA,EAAAA,KAACf,EAAc,CAACY,SAXHkB,IACjB7B,EAAM8B,WAAWD,EAAOE,WAAW,S,YCJ3C,MAeA,EAfoB/B,IAGZc,EAAAA,EAAAA,KAAA,OAAAD,UACAC,EAAAA,EAAAA,KAAA,OAAKU,UAAWC,EAA0BZ,SACrCb,EAAMgC,QAAQN,KAAIO,IACfvB,EAAAA,EAAAA,MAAA,OAAKc,UAAWC,EAAoBZ,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKoB,IAAKD,EAAEE,OAAQC,IAAI,MACxBtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAO,CAACC,GAAI,YAAcL,EAAEL,GACpBJ,UAAWe,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAWf,EAAsBA,CAAmB,EAACZ,SAAEoB,EAAEQ,SAHvDR,EAAEL,UCK5D,EAViB5B,IAETU,EAAAA,EAAAA,MAAA,OAAKc,UAAWC,EAAqBZ,SAAA,EACjCC,EAAAA,EAAAA,KAAC4B,EAAU,CAACV,QAAShC,EAAM2C,YAAYX,WACvClB,EAAAA,EAAAA,KAAC8B,EAAO,CAACzB,QAASnB,EAAM2C,YAAYE,SAC3Bf,WAAY9B,EAAM8B,gB,aCLvC,MAAMgB,UAAyBC,EAAAA,UAC3BC,MAAAA,GACI,OACIlC,EAAAA,EAAAA,KAACmC,EAAO,CACJN,YAAaO,KAAKlD,MAAM2C,YACxBb,WAAYoB,KAAKlD,MAAM8B,YAInC,EASJ,MAGA,GAFIqB,EAAAA,EAAAA,KAPmBC,IACZ,CACHT,YAAaS,EAAMT,eAKE,CAACb,WAAU,KAApCqB,CAAuCL,E","sources":["webpack://ReactSocialNetwork/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/AddMessageFormHook.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ThEfZ\",\"dialogsItems\":\"Dialogs_dialogsItems__YLEE7\",\"dialog\":\"Dialogs_dialog__gZ2oy\",\"active\":\"Dialogs_active__roUlT\",\"messages\":\"Dialogs_messages__zYslj\",\"message\":\"Dialogs_message__44r0l\",\"addMessage\":\"Dialogs_addMessage__eb9SC\"};","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nexport const AddMessageForm = (props) => {\r\n    const {\r\n        register,\r\n        formState: {errors, isValid},\r\n        handleSubmit,\r\n        reset\r\n    } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data)\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <textarea placeholder=\"Add your text\"\r\n                {...register(\"newMessage\", {\r\n                    required: \"Add your text\",\r\n                    minLength: {\r\n                        value: 5,\r\n                        message: 'min 5 symbols'\r\n\r\n                    },\r\n                    maxLength: 300\r\n                })}/>\r\n            <div>\r\n                {errors?.textarea && <p>{errors?.textarea?.message || \"Error!\"}</p>}\r\n            </div>\r\n            <button type=\"submit\" disabled={!isValid}>Send</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport dialogsStyle from './../Dialogs.module.css'\r\nimport {AddMessageForm} from \"./AddMessageFormHook\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessage)\r\n    }\r\n\r\n    return <div className={dialogsStyle.messages}>\r\n        <div className={dialogsStyle.message}>\r\n            {props.message.map(m =>\r\n                <div key={m.id}>{m.message}</div>\r\n            )}\r\n        </div>\r\n        <div className={dialogsStyle.addMessage}>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport dialogsStyle from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div>\r\n        <div className={dialogsStyle.dialogsItems}>\r\n            {props.dialogs.map(d =>\r\n                <div className={dialogsStyle.dialog} key={d.id}>\r\n                    <img src={d.avatar} alt=\"\"/>\r\n                    <NavLink to={\"/dialogs/\" + d.id}\r\n                             className={({isActive}) => isActive ? dialogsStyle.active : dialogsStyle.dialog}>{d.name}</NavLink>\r\n                </div>)}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport dialogsStyle from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={dialogsStyle.dialogs}>\r\n            <DialogItem dialogs={props.dialogsPage.dialogs}/>\r\n            <Message message={props.dialogsPage.messages}\r\n                     addMessage={props.addMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {addMessage} from \"../../redux/dialogsReducer.ts\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nclass dialogsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Dialogs\r\n                dialogsPage={this.props.dialogsPage}\r\n                addMessage={this.props.addMessage}\r\n                // isAuth={this.props.isAuth}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst DialogsContainer =\r\n    connect(mapStateToProps, {addMessage})(dialogsContainer);\r\n\r\nexport default DialogsContainer;"],"names":["AddMessageForm","props","_errors$textarea","register","formState","errors","isValid","handleSubmit","reset","useForm","mode","_jsxs","onSubmit","data","children","_jsx","placeholder","required","minLength","value","message","maxLength","textarea","type","disabled","className","dialogsStyle","map","m","id","values","addMessage","newMessage","dialogs","d","src","avatar","alt","NavLink","to","_ref","isActive","name","DialogItem","dialogsPage","Message","messages","dialogsContainer","React","render","Dialogs","this","connect","state"],"sourceRoot":""}